<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">

    <!-- 扫描包加载Service实现类 -->
    <context:component-scan
            base-package="com.neusoft.service,com.neusoft.web.utils,com.neusoft.components.utils"></context:component-scan>

    <!-- 自动创建代理 对@AspectJ注解的支持 -->
    <!-- 通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Service -->
    <aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>

    <bean id="sid" class="org.n3r.idworker.Sid"></bean>

    <!-- druid spring 监控设置 -->
    <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor"/>
    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
        <property name="patterns">
            <list>
                <value>com.neusoft.service.*</value>
                <value>com.neusoft.mapper.*</value>
            </list>
        </property>
    </bean>
    <aop:config proxy-target-class="true">
        <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut"/>
    </aop:config>

    <!-- 配置redis客户端集群版 单机版和集群版的jedis只能存在一个 -->
    <!-- <bean id="jedisCluster" class="redis.clients.jedis.JedisCluster">
        <constructor-arg>
            <set>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${redis01.real.cluster.client.host}"/>
                    <constructor-arg name="port" value="${redis01.real.cluster.client.port}"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${redis02.real.cluster.client.host}"/>
                    <constructor-arg name="port" value="${redis02.real.cluster.client.port}"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${redis03.real.cluster.client.host}"/>
                    <constructor-arg name="port" value="${redis03.real.cluster.client.port}"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${redis04.real.cluster.client.host}"/>
                    <constructor-arg name="port" value="${redis04.real.cluster.client.port}"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${redis05.real.cluster.client.host}"/>
                    <constructor-arg name="port" value="${redis05.real.cluster.client.port}"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${redis06.real.cluster.client.host}"/>
                    <constructor-arg name="port" value="${redis06.real.cluster.client.port}"/>
                </bean>
            </set>
        </constructor-arg>
    </bean>
    <bean id="jedisClientCluster" class="com.neusoft.rest.component.impl.JedisClientCluster"/> -->

</beans>
